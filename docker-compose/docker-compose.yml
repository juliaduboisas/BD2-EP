services:
  frontend_builder:
    image: dimidimii/dance-school-webapp:v1.1
    container_name: dance_school_frontend_builder
    command: sh -c "npm install && ng build --configuration production --output-path=/app/dist/frontend" # This builds to /app/dist/frontend
    volumes:
      - frontend_dist:/app/dist/frontend 
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 1024M

  nginx_frontend:
    image: nginx:stable-alpine
    container_name: dance_school_frontend
    ports:
      - "4200:4200" 
    volumes:
      - frontend_dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf 
    depends_on:
      - frontend_builder 
      - web_api 
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 64M

  web_api:
    image: dimidimii/dance-school-api:v1.1
    container_name: dance_school_api
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/danceSchool
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
    depends_on:
      - postgres_db
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M

  postgres_db:
    image: postgres:17-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: danceSchool
    ports:
      - "5431:5432"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M

volumes:
  frontend_dist: